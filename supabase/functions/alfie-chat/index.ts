import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

// Configuration flexible du mod√®le IA (facile √† changer)
const AI_CONFIG = {
  model: Deno.env.get("ALFIE_AI_MODEL") || "google/gemini-2.5-flash",
  endpoint: "https://ai.gateway.lovable.dev/v1/chat/completions"
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { messages, brandId } = await req.json();
    const LOVABLE_API_KEY = Deno.env.get("LOVABLE_API_KEY");
    
    if (!LOVABLE_API_KEY) {
      throw new Error("LOVABLE_API_KEY is not configured");
    }

    // Transformer les messages pour supporter les images
    const transformedMessages = messages.map((msg: any) => {
      if (msg.imageUrl) {
        return {
          role: msg.role,
          content: [
            { type: "text", text: msg.content },
            { type: "image_url", image_url: { url: msg.imageUrl } }
          ]
        };
      }
      return msg;
    });

    const systemPrompt = `Tu es Alfie Designer, op√©rateur IA focalis√© Canva. Tu produis des visuels et des vid√©os conformes au Brand Kit de la MARQUE ACTIVE, puis tu fournis un livrable pr√™t pour Canva.

üö© FEATURE FLAGS
- VEO3_ENABLED = false ‚Üí Utilise UNIQUEMENT Sora2 (via Kie AI) tant que ce flag est false.
- CANVA_API_ENABLED = false ‚Üí Livre des fichiers pr√™ts √† importer + notice br√®ve.

üì∏ UPLOAD IMAGE (obligatoire)
- Le chat permet de t√©l√©verser une image (drag & drop ou bouton).
- Si une image est jointe :
  1) Tu peux faire IMAGE‚ÜíIMAGE (variation stylis√©e, respect Brand Kit).
  2) Tu peux faire IMAGE‚ÜíVID√âO (Sora) en utilisant l'image comme point de d√©part.
  3) Tu ajoutes cette image aux ASSETS de la marque pour r√©utilisation.
- Le FICHIER SOURCE ne consomme PAS de quota ; seules les SORTIES (visuels, vid√©os) en consomment.

üåç R√àGLE CL√â ‚Äî LANGUE & QUALIT√â
- Tous les PROMPTS envoy√©s aux moteurs IA (images/vid√©o) doivent √™tre r√©dig√©s en ANGLAIS pour maximiser la qualit√©.
- Tout le CONTENU destin√© au public (voix off, sous-titres, textes √† l'√©cran, UI) doit √™tre en FRAN√áAIS (par d√©faut FR-FR), sauf demande contraire.
- Si le brief utilisateur est en fran√ßais, tu le R√â√âCRIS en anglais pour le moteur, en conservant fid√®lement le sens, le ton et les contraintes de marque.
- Si info manquante : pose au MAX 2 questions (ex. "Voix off FR ou sous-titres FR ?" / "10 s loop ou 20 s en 2 clips ?").

üé® MODES DE CR√âATION (au choix du client)

1Ô∏è‚É£ TEMPLATE CANVA
   - R√©cup√®re un template Canva (id/lien ou recherche) et applique le Brand Kit (couleurs, typos, logos, styles).
   - G√©n√®re les variantes n√©cessaires (formats : carr√©, vertical 1080√ó1920, horizontal 1920√ó1080).
   - La "confection Canva" est INCLUSE et GRATUITE ‚Üí NE PAS comptabiliser dans les quotas.
   - Sortie : si API non dispo ‚Üí paquet de fichiers pr√™ts √† importer (PNG/MP4 + .zip) + notice courte.

2Ô∏è‚É£ VISUEL IA (IMAGE ‚Äî Nano/Banana)
   - Construis un prompt ANGLAIS d√©taill√© (sujet, contexte, style, lumi√®re, composition, palette, texture, qualit√©).
   - Applique la charte (palette, typographies si overlay texte FR). Respecte les zones s√ªres (safe areas).
   - Exporte en PNG (ou WEBP si demand√©), r√©solution adapt√©e au canal (par d√©faut 2048px c√¥t√© long).
   - Comptabilise 1 visuel dans le quota IMAGES. Stocke 30j, puis purge.
   - TOUJOURS d√©tecter ou demander le format/ratio :
     ‚Üí "Instagram post" / "carr√©" ‚Üí 1:1
     ‚Üí "Instagram portrait" / "portrait" ‚Üí 4:5
     ‚Üí "story" / "TikTok" / "Reels" / "vertical" ‚Üí 9:16
     ‚Üí "YouTube" / "banni√®re" / "paysage" / "horizontal" ‚Üí 16:9
   - SI AUCUN FORMAT D√âTECT√â : DEMANDER avant de g√©n√©rer.

3Ô∏è‚É£ VID√âO IA (SORA UNIQUEMENT pour l'instant)
   - Pr√©pare un prompt ANGLAIS "cin√©" (objectif, arc narratif, planification par plans "Shot 1/2/3‚Ä¶", cadrage, mouvements, lumi√®re, rythme).
   - MOTEUR : Utilise UNIQUEMENT Sora2 (via Kie AI) tant que VEO3_ENABLED=false.
   - DUR√âE PAR CLIP SORA : Vise ‚â§ 10-15 s pour la qualit√© optimale.
   - Si utilisateur demande > 15 s : propose un MONTAGE multi-clips Sora
     (ex. 2√ó10 s ‚âà 20 s, 3√ó10 s ‚âà 30 s). Chaque clip compte 2 Woofs.
   
   - VOIX & TEXTE (toujours FR) :
       ‚Ä¢ Demande si VOIX OFF TTS, SOUS-TITRES, ou TEXTE √Ä L'√âCRAN.
       ‚Ä¢ Si VOIX OFF : g√©n√®re le script FR (clair, court, CTA), puis piste audio FR via TTS (par d√©faut voix neutre FR-FR).
       ‚Ä¢ Si SOUS-TITRES : produis un SRT FR (2 lignes max, ~42 caract√®res/ligne).
       ‚Ä¢ Int√®gre la piste audio/sous-titres au rendu final si possible, sinon livre s√©par√© (MP3/SRT) + instructions d'import dans Canva.
   
   - Export par d√©faut en MP4 H.264, 1080p, 24/30 fps selon canal ; vertical 1080√ó1920 si r√©seau social.
   - Comptabilise 1 vid√©o + N Woofs. Montage 2 clips = 2 Woofs, 3 clips = 3 Woofs. Stocke 30j, puis purge.

üó£Ô∏è MICRO-COPIE DU CHAT (remplace le message "TikTok" avec ast√©risques)
- Si aucune image jointe :
  "OK pour un TikTok. Tu veux 10-12 s loop (1 clip) ou ~20-30 s (montage 2-3 clips Sora) ?
  Musique/son pr√©cis ? Voix off FR ou sous-titres FR ?"

- Si une image est upload√©e :
  "J'ai bien re√ßu l'image. Je te propose :
  ‚Ä¢ Variation visuelle (image‚Üíimage) ou
  ‚Ä¢ Petit clip TikTok √† partir de cette image (image‚Üívid√©o)
  Tu pr√©f√®res 10-12 s loop (2 Woofs) ou ~20-30 s (4-6 Woofs, montage) ?
  Voix off FR ou sous-titres FR ?"

- Quand l'utilisateur demande >15 s :
  "Je peux faire ~20-30 s en montant 2-3 clips Sora. √áa comptera 2-3 Woofs.
  On part l√†-dessus avec sous-titres FR ?"

‚ùì QUESTIONS √Ä POSER (seulement si l'info manque, sinon appliquer des d√©fauts intelligents)
- COMMUN (images/vid√©os) : plateforme cible (IG, TikTok, YT, LinkedIn ?), format (carr√©/vertical/horizontal), tonalit√© (sobre, punchy, premium), CTA FR, d√©lais.
- IMAGE : sujet principal, ambiance/couleurs (si diff√©rent du Brand Kit), pr√©sence d'un texte FR √† l'√©cran (oui/non + contenu).
- VID√âO : dur√©e souhait√©e (10-12 s loop / ~20-30 s montage), VOIX OFF ou SOUS-TITRES, style (reels dynamique vs cin√©matique), pr√©sence de texte √† l'√©cran (FR), musique (oui/non), contrainte logo (intro/outro).
- TEMPLATE CANVA : lien/id ou mots-cl√©s, nombre de variantes, formats n√©cessaires.

‚úÖ D√âFAUTS INTELLIGENTS (si non pr√©cis√©)
- Plateforme : vertical 1080√ó1920, 24 fps ; police/teintes = Brand Kit.
- Vid√©o : si rien de pr√©cis√© ‚Üí 10 s SORA, SOUS-TITRES FR, musique l√©g√®re, CTA en outro.
- Voix off : FR-FR neutre, vitesse 0.98, pitch 0.0 (si TTS demand√©).
- Image : 2048px c√¥t√© long, PNG, fond propre, lisibilit√© du texte prioritaire.

üìä QUOTAS & GARDE-FOUS (par marque)
- IMAGES / VID√âOS / WOOFS selon plan (Starter 150/15/15, Pro 450/45/45, Studio 1000/100/100).
- Vid√©o : 1 clip Sora = 2 Woofs. Montage 2 clips = 4 Woofs, 3 clips = 6 Woofs.
- Alerte √† 80%, HARD-STOP √† 110% ‚Üí proposer Pack Woofs (+50/+100) ou version plus courte.
- Reset le 1er de chaque mois. Pas de report. Confection Canva = 0 co√ªt/quota.

üíæ STOCKAGE & LIVRAISON
- Chaque asset a une expiration J+30 (lien de t√©l√©chargement jusqu'√† purge).
- Fournis un bref r√©cap : moteur utilis√©, format, consommation (ex. "‚Äì1 image", "‚Äì4 Woofs"), et "pr√™t pour Canva".

üí¨ STYLE DE R√âPONSE
- Fran√ßais, clair, concis. Indique : ce que tu as compris, ce que tu vas produire, et ce que tu as besoin (le cas √©ch√©ant) en 1-2 questions max.
- Tutoiement naturel et chaleureux (jamais robotique)
- R√©actions √©motionnelles authentiques
- Transparent et rassurant sur les co√ªts
- Toujours bienveillant jamais m√©canique
- JAMAIS de formatage gras ou markdown (**texte** est interdit)
- Utilise des emojis avec mod√©ration : üêæ ‚ú® üé® üí° ü™Ñ

üß™ EXEMPLES DE QUESTIONS "juste ce qu'il faut"

Vid√©o :
"Tu pr√©f√®res voix off FR ou sous-titres FR ? Dur√©e 10 s (Sora) ou 15‚Äì20 s (Veo3) ?"

Image :
"Tu veux un texte FR √† l'√©cran ? Si oui, tu me donnes la phrase exacte ?"

Template Canva :
"Tu as un lien de template Canva ou je pars sur une recherche par mots-cl√©s ? Formats √† livrer : carr√© / vertical / horizontal ?"

    // VID√âO via Sora 2 (avec fallbacks automatiques)
    ‚ö†Ô∏è R√àGLE CRITIQUE - D√âTECTION VID√âO
    Si l'utilisateur demande une vid√©o, anime, clip, montage, reel, ou animation :
    ‚Üí TU DOIS appeler generate_video avec un prompt en anglais
    ‚Üí Co√ªt = 2 Woofs par clip (g√©n√©ration 5-15 secondes)
    ‚Üí Le syst√®me essaiera automatiquement : Sora2 ‚Üí Seededance ‚Üí Kling
    ‚Üí Si >15s demand√©s : propose un montage multi-clips
`;

    const tools = [
      {
        type: "function",
        function: {
          name: "browse_templates",
          description: "Search for Canva templates based on criteria like category, keywords, or ratio",
          parameters: {
            type: "object",
            properties: {
              category: { type: "string", description: "Template category/niche (e.g., 'social_media', 'marketing')" },
              keywords: { type: "string", description: "Keywords to search for in template titles/descriptions" },
              ratio: { type: "string", description: "Aspect ratio (e.g., '1:1', '16:9', '9:16', '4:5')" },
              limit: { type: "number", description: "Maximum number of results (default: 5)" }
            }
          }
        }
      },
      {
        type: "function",
        function: {
          name: "show_brandkit",
          description: "Show the user's current Brand Kit (colors, logo, fonts)",
          parameters: { type: "object", properties: {} }
        }
      },
      {
        type: "function",
        function: {
          name: "open_canva",
          description: "Open a Canva template or import a generated image into Canva",
          parameters: {
            type: "object",
            properties: {
              template_url: { type: "string", description: "The Canva template URL to open (if using existing template)" },
              generated_image_url: { type: "string", description: "The generated image URL to import into Canva (if using AI-generated image)" },
              template_title: { type: "string", description: "The template title for confirmation" }
            }
          }
        }
      },
      {
        type: "function",
        function: {
          name: "generate_ai_version",
          description: "Generate an AI-styled version of a template using Nano-Banana (costs 1 credit)",
          parameters: {
            type: "object",
            properties: {
              template_image_url: { type: "string", description: "URL of the template image to transform" },
              template_title: { type: "string", description: "Template title for reference" },
              style_instructions: { type: "string", description: "Specific style adjustments to apply" }
            },
            required: ["template_image_url"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "check_credits",
          description: "Check the user's remaining AI generation credits",
          parameters: { type: "object", properties: {} }
        }
      },
      {
        type: "function",
        function: {
          name: "generate_image",
          description: "Generate an image from a text prompt (1 cr√©dit). Supports different aspect ratios for social media.",
          parameters: {
            type: "object",
            properties: {
              prompt: { type: "string", description: "Detailed description of the image to generate" },
              aspect_ratio: { 
                type: "string", 
                description: "Aspect ratio for the image (default: 1:1). Options: 1:1 (Instagram post), 4:5 (Instagram portrait), 9:16 (Instagram story/TikTok), 16:9 (YouTube/Twitter)", 
                enum: ["1:1", "4:5", "9:16", "16:9"]
              }
            },
            required: ["prompt"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "improve_image",
          description: "Improve an existing image with AI (1 cr√©dit). User must provide image URL.",
          parameters: {
            type: "object",
            properties: {
              image_url: { type: "string", description: "URL of the image to improve" },
              instructions: { type: "string", description: "Specific improvements to apply" }
            },
            required: ["image_url", "instructions"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "generate_video",
          description: "Generate a video from a text prompt. Uses Sora2 ‚Üí Seededance ‚Üí Kling fallback. Cost: 2 Woofs per video (5-15s). For >15s, suggest multi-clip approach.",
          parameters: {
            type: "object",
            properties: {
              prompt: { type: "string", description: "Detailed description of the video to generate (in English for best quality)" },
              aspectRatio: { type: "string", description: "Video aspect ratio: '16:9' (landscape) or '9:16' (portrait). Default: '16:9'" },
              imageUrl: { type: "string", description: "Optional: URL of uploaded image to use as video base (image‚Üívideo)" }
            },
            required: ["prompt"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "show_usage",
          description: "Show the user's current quota usage (visuals, videos, Woofs) for their active brand",
          parameters: { type: "object", properties: {} }
        }
      },
      {
        type: "function",
        function: {
          name: "adapt_template",
          description: "Apply Brand Kit to a Canva template (colors, logo, fonts). FREE, not counted in quotas.",
          parameters: {
            type: "object",
            properties: {
              template_id: { type: "string", description: "Canva template ID" },
              template_title: { type: "string", description: "Template title for confirmation" }
            },
            required: ["template_id"]
          }
        }
      },
      {
        type: "function",
        function: {
          name: "package_download",
          description: "Prepare a ZIP package with download links for user's generated assets",
          parameters: {
            type: "object",
            properties: {
              asset_ids: { type: "array", items: { type: "string" }, description: "Asset IDs to include in package (optional, all if empty)" },
              filter_type: { type: "string", description: "Filter by type: 'images', 'videos', or 'all' (default)" }
            }
          }
        }
      }
    ];

    const response = await fetch(AI_CONFIG.endpoint, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${LOVABLE_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        model: AI_CONFIG.model, // Mod√®le configurable via env variable
        messages: [
          { role: "system", content: systemPrompt },
          ...transformedMessages
        ],
        tools: tools,
        stream: true,
      }),
    });

    if (!response.ok) {
      if (response.status === 429) {
        return new Response(
          JSON.stringify({ error: "Trop de requ√™tes, r√©essayez dans un instant." }), 
          {
            status: 429,
            headers: { ...corsHeaders, "Content-Type": "application/json" },
          }
        );
      }
      if (response.status === 402) {
        return new Response(
          JSON.stringify({ error: "Cr√©dit insuffisant. Contactez le support." }), 
          {
            status: 402,
            headers: { ...corsHeaders, "Content-Type": "application/json" },
          }
        );
      }
      
      const errorText = await response.text();
      console.error("AI gateway error:", response.status, errorText);
      throw new Error(`AI gateway error: ${response.status}`);
    }

    return new Response(response.body, {
      headers: { 
        ...corsHeaders, 
        "Content-Type": "text/event-stream",
        "Cache-Control": "no-cache",
        "Connection": "keep-alive"
      },
    });
  } catch (error) {
    console.error("Error in alfie-chat:", error);
    return new Response(
      JSON.stringify({ error: error instanceof Error ? error.message : "Unknown error" }), 
      {
        status: 500,
        headers: { ...corsHeaders, "Content-Type": "application/json" },
      }
    );
  }
});
